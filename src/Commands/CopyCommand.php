<?php
/**
 * This file contains CopyCommand class.
 *
 * @author Akbly Sofiane <sofiane.akbly@gmail.com>
 */

namespace Ssf\Copy\Commands;


use Ssf\Copy\Exceptions\CommandOptionMissingException;
use Ssf\Copy\Commands\Input\Type\InputArgument;
use Ssf\Copy\Commands\Input\Type\InputOption;
use Ssf\Copy\Commands\Input\Type\InputOptional;
use Ssf\Copy\Commands\Input\Type\InputRequired;
use Ssf\Copy\Exceptions\ArgvNotExistsException;
use Ssf\Copy\Facades\Copy;
use Ssf\Copy\Framework\Command;
use Ssf\Copy\Tools\Helpers;

/**
 * Class CopyCommand
 * Cette classe est définie la commande copy
 * @package Ssf\Copy\Commands
 * @see Command
 */
class CopyCommand extends Command
{

    /**
     * CopyCommand constructor.
     * @param array|null $argv Liste des arguments de php
     */
    public function __construct(array $argv = null)
    {
        parent::__construct($argv); // Constructeur de la classe mère
        $this->signature = [
            InputOption::create(
                InputRequired::option('--source', null, "Chemin du fichier source"),
                InputRequired::option('--target', null, "Chemin du fichier destination"),
                InputOptional::option('--host', null, "Adresse du serveur distant"),
                InputOptional::option('--user', null, "Nom d'utilisateur pour le serveur distant"),
                InputOptional::option('--port', null, "Port du serveur distant"),
                InputOptional::option('--private-key', null, "Chemin de la clé privée pour l'authentification au serveur distant"),
            ),
            InputArgument::create(
                InputOptional::option('--remote', false, "Copie du fichier sur un serveur distant ?"),
                InputOptional::option('--download', false, "Téléchargement du fichier distant (source) sur la machine locale"),
                InputOptional::option('--password', null, "Mot de passe pour le serveur distant"),
            )
        ];
    }

    /**
     * @see Command::handle()
     * @return int
     * @throws CommandOptionMissingException
     * @throws ArgvNotExistsException
     */
    public function handle(): int
    {
        parent::handle(); // TODO: Change the autogenerated stub

        if (($source = $this->option('source')) === null)
            throw new CommandOptionMissingException($this->name, 'source');

        if (($target = $this->option('target')) === null)
            throw new CommandOptionMissingException($this->name, 'target');

        if ($this->argument('password') === true) {
            $this->options['--password'] = $this->secret("Enter password...");
        }

        try {
            $copy = new Copy($this->argument('remote'), $this->remoteOptions(), $this->argument('download'));
            $copy->run($source, $target);
            return 0;
        } catch (\Throwable $e) {
            Helpers::signal($e);
            return 1;
        }
    }

    /**
     * Permet de définir le tableau pour les
     * options si on se trouve dans une copie
     * entre 2 serveurs distants.
     *
     * @return array
     */
    private function remoteOptions()
    {
        $params = Helpers::config('filesystems.disks.sftp.params');
        $keys = array_keys($params);
        $options = array();
        foreach ($keys as $key)
            $options[] = ($this->option($key) ?? $this->argument($key) ?? $params[$key] ?? null);
        return array_combine($keys, $options);
    }
}